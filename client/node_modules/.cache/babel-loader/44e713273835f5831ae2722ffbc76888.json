{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["/Users/yarboclos/web_projects/larmoire/client/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumulatedQuantity","cartItem","quantity","selectCartTotal","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,EAExCE,IAAD,IAAUA,IAAI,CAACE,SAF0B,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAEzCE,IAAD,IAAUA,IAAI,CAACI,MAF2B,CAAvC;AAKP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAE7CC,SAAD,IAAeA,SAAS,CAACI,MAAV,CAAiB,CAACC,mBAAD,EAAsBC,QAAtB,KAAmCD,mBAAmB,GAACC,QAAQ,CAACC,QAAjF,EAA2F,CAA3F,CAF+B,CAA3C;AAKN,OAAO,MAAMC,eAAe,GAAGb,cAAc,CACzC,CAACI,eAAD,CADyC,EAExCC,SAAD,IAAeA,SAAS,CAACI,MAAV,CAAiB,CAACC,mBAAD,EAAsBC,QAAtB,KAAmCD,mBAAmB,GAACC,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACG,KAArG,EAA4G,CAA5G,CAF0B,CAAtC","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n    [selectCart],\n    (cart) => cart.cartItems\n);\n\nexport const selectCartHidden = createSelector (\n    [selectCart],\n    (cart) => cart.hidden\n);\n\nexport const selectCartItemsCount = createSelector(\n    [selectCartItems],\n    (cartItems) => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity+cartItem.quantity ,0) \n);\n\n export const selectCartTotal = createSelector(\n     [selectCartItems],\n     (cartItems) => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity+cartItem.quantity * cartItem.price ,0) \n )"]},"metadata":{},"sourceType":"module"}