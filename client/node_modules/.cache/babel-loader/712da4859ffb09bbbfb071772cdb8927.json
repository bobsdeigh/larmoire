{"ast":null,"code":"var _jsxFileName = \"/Users/yarboclos/web_projects/larmoire/client/src/components/stripe-button/stripe-button.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { clearCart } from \"../../redux/cart/cart.actions\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\n\nconst StripeCheckoutButton = ({\n  price,\n  clearCart\n}) => {\n  const priceForStripe = price * 100;\n  const publishableKey = \"pk_test_nFDMvefE00ETCMg3edk82hhy004fELs0gf\";\n\n  const onToken = token => {\n    axios({\n      url: 'payment',\n      method: 'post',\n      data: {\n        amount: priceForStripe,\n        token: token\n      }\n    }).then(response => {\n      alert('Payment successful');\n      clearCart();\n    }).catch(error => {\n      console.log('Payment error ', JSON.parse(error));\n      alert('There was an issue with your payment. Please sure you use the provided card');\n    });\n  };\n\n  return React.createElement(StripeCheckout, {\n    label: \"Pay now\",\n    name: \"Larmoire\",\n    billingAddress: true,\n    shippingAddress: true,\n    image: \"https://sendeyo.com/up/d/f3eb2117da\",\n    description: \"Your total is $\".concat(price),\n    amount: priceForStripe,\n    panelLabel: \"Pay now\",\n    token: onToken,\n    stripeKey: publishableKey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  });\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearCart: () => dispatch(clearCart())\n});\n\nexport default connect(null, mapDispatchToProps)(StripeCheckoutButton);","map":{"version":3,"sources":["/Users/yarboclos/web_projects/larmoire/client/src/components/stripe-button/stripe-button.component.jsx"],"names":["React","connect","clearCart","StripeCheckout","axios","StripeCheckoutButton","price","priceForStripe","publishableKey","onToken","token","url","method","data","amount","then","response","alert","catch","error","console","log","JSON","parse","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,SAAT,QAA0B,+BAA1B;AAEA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQJ,EAAAA;AAAR,CAAD,KAAwB;AACnD,QAAMK,cAAc,GAAGD,KAAK,GAAG,GAA/B;AACA,QAAME,cAAc,GAAG,4CAAvB;;AAEA,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACvBN,IAAAA,KAAK,CAAC;AACJO,MAAAA,GAAG,EAAE,SADD;AAEJC,MAAAA,MAAM,EAAE,MAFJ;AAGJC,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAEP,cADJ;AAEJG,QAAAA,KAAK,EAAEA;AAFH;AAHF,KAAD,CAAL,CAOGK,IAPH,CAOQC,QAAQ,IAAI;AAClBC,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACAf,MAAAA,SAAS;AACV,KAVD,EAUGgB,KAVH,CAUSC,KAAK,IAAE;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAA9B;AACAF,MAAAA,KAAK,CAAC,6EAAD,CAAL;AACD,KAbD;AAcD,GAfD;;AAgBA,SACE,oBAAC,cAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,cAAc,MAHhB;AAIE,IAAA,eAAe,MAJjB;AAKE,IAAA,KAAK,EAAC,qCALR;AAME,IAAA,WAAW,2BAAoBX,KAApB,CANb;AAOE,IAAA,MAAM,EAAEC,cAPV;AAQE,IAAA,UAAU,EAAC,SARb;AASE,IAAA,KAAK,EAAEE,OATT;AAUE,IAAA,SAAS,EAAED,cAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAcD,CAlCD;;AAoCA,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCvB,EAAAA,SAAS,EAAE,MAAMuB,QAAQ,CAACvB,SAAS,EAAV;AADa,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CACpB,IADoB,EACduB,kBADc,CAAP,CACanB,oBADb,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { clearCart } from \"../../redux/cart/cart.actions\";\n\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\n\nconst StripeCheckoutButton = ({price, clearCart}) => {\n  const priceForStripe = price * 100;\n  const publishableKey = \"pk_test_nFDMvefE00ETCMg3edk82hhy004fELs0gf\";\n\n  const onToken = token => {\n    axios({\n      url: 'payment',\n      method: 'post',\n      data: {\n        amount: priceForStripe,\n        token: token\n      }\n    }).then(response => {\n      alert('Payment successful');\n      clearCart();\n    }).catch(error=>{\n      console.log('Payment error ', JSON.parse(error));\n      alert('There was an issue with your payment. Please sure you use the provided card')\n    })\n  };\n  return (\n    <StripeCheckout\n      label=\"Pay now\"\n      name=\"Larmoire\"\n      billingAddress\n      shippingAddress\n      image=\"https://sendeyo.com/up/d/f3eb2117da\"\n      description={`Your total is $${price}`}\n      amount={priceForStripe}\n      panelLabel=\"Pay now\"\n      token={onToken}\n      stripeKey={publishableKey}\n    />\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearCart: () => dispatch(clearCart())\n});\n\nexport default connect(\n  null, mapDispatchToProps)(StripeCheckoutButton);"]},"metadata":{},"sourceType":"module"}